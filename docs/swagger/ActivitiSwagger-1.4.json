{
  "swagger": "2.0",
  "info": {
    "description": " The Alfresco Activiti BPM Suite comes with a REST API. It includes both an Enterprise equivalent of the Activiti Open Source REST API exposing the generic Activiti Engine operations, and a dedicated set op REST API endpoints specific for the functionality in the Alfresco Activiti BPM Suite. \n      Note that there is also an 'internal' REST API, which are the REST endpoints used by the Javascript UI. It is advised not to use this API, these REST API urls and way of using it will change and evolve with the product and are unsupported. The supported API is stable. Also, the internal REST API uses a different authentication mechanism tailored towards web browser usage.\n",
    "version": "1.4.0",
    "title": "Activiti Public Rest API",
    "contact": {
      "name": "mobile@alfresco.com"
    },
    "license": {
      "name": "Copyright 2005-2016 Alfresco Software, Ltd. All rights reserved.\nLicense rights for this program may be obtained from Alfresco Software, Ltd.\npursuant to a written agreement and any use of this program without such an\nagreement is prohibited."
    }
  },
  "host": "localhost:8080",
  "basePath": "/activiti-app",
  "tags": [
    {
      "name": "Integration Drive",
      "description": "Manage Google Drive Integration"
    },
    {
      "name": "Comments",
      "description": "Manage Comments"
    },
    {
      "name": "Groups",
      "description": "Retrieve Groups"
    },
    {
      "name": "Apps Runtime",
      "description": "Manage Runtime Apps"
    },
    {
      "name": "Script File",
      "description": "Script file"
    },
    {
      "name": "Admin Groups",
      "description": "Manage Endpoints"
    },
    {
      "name": "Profile",
      "description": "Manage User Information"
    },
    {
      "name": "Process Definitions Form",
      "description": "Start Forms"
    },
    {
      "name": "User Filters",
      "description": "Manage Task & Process Filters"
    },
    {
      "name": "IDM Sync",
      "description": "Api Idm Sync Log Entry Resource"
    },
    {
      "name": "System Properties",
      "description": "List System Properties"
    },
    {
      "name": "Admin Users",
      "description": "Manage Users"
    },
    {
      "name": "Task Forms",
      "description": "Manage Task Forms"
    },
    {
      "name": "Integration Alfresco Cloud",
      "description": "Manage Alfresco Integration"
    },
    {
      "name": "Apps Definition",
      "description": "Manage App Definition"
    },
    {
      "name": "Process Scope",
      "description": "Api Process Scope Resource"
    },
    {
      "name": "About",
      "description": "Information about Activiti BPM Suite"
    },
    {
      "name": "Model Bpmn",
      "description": " "
    },
    {
      "name": "Task CheckList",
      "description": "Manage CheckList"
    },
    {
      "name": "Users Workflow",
      "description": "Retrieve Workflow User"
    },
    {
      "name": "Editor",
      "description": "Api Editor Form Resource"
    },
    {
      "name": "Temporary",
      "description": "Api Example Form Option Resource"
    },
    {
      "name": "Models",
      "description": "Api Model Resource"
    },
    {
      "name": "Integration Box",
      "description": "Manage Box Integration"
    },
    {
      "name": "Process Instances Information",
      "description": "Manage process instances"
    },
    {
      "name": "Process Definitions",
      "description": "Api Process Definitions Resource"
    },
    {
      "name": "User",
      "description": "Retrieve Users"
    },
    {
      "name": "Integration Alfresco OnPremise",
      "description": "Manage Alfresco Integration"
    },
    {
      "name": "Models History",
      "description": "Model Version history"
    },
    {
      "name": "Process Instances",
      "description": "Manage Process Instances"
    },
    {
      "name": "Admin Endpoints",
      "description": "Manage Endpoints"
    },
    {
      "name": "Process Instances Listing",
      "description": "Listing"
    },
    {
      "name": "Task",
      "description": "Manage Tasks"
    },
    {
      "name": "Admin Tenants",
      "description": "Manage Tenants"
    },
    {
      "name": "Task Actions",
      "description": "Manage Task Actions"
    },
    {
      "name": "Content",
      "description": "Manage Contents"
    },
    {
      "name": "Content Rendition",
      "description": "Retrieve Content Rendition"
    },
    {
      "name": "Integration Account",
      "description": "Client Integration Account"
    }
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/enterprise/account/integration": {
      "get": {
        "tags": [
          "Integration Account"
        ],
        "summary": "Retrieve Alfresco account information",
        "description": "Ideal to map accounts & integrate with 3rd party app/client",
        "operationId": "getAccountsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/admin/basic-auths": {
      "get": {
        "tags": [
          "Admin Endpoints"
        ],
        "summary": "getBasicAuthConfigurations",
        "operationId": "getBasicAuthConfigurationsUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EndpointBasicAuthRepresentation"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Admin Endpoints"
        ],
        "summary": "createBasicAuthConfiguration",
        "operationId": "createBasicAuthConfigurationUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createRepresentation",
            "description": "createRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateEndpointBasicAuthRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EndpointBasicAuthRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/admin/basic-auths/{basicAuthId}": {
      "get": {
        "tags": [
          "Admin Endpoints"
        ],
        "summary": "getBasicAuthConfiguration",
        "operationId": "getBasicAuthConfigurationUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "basicAuthId",
            "in": "path",
            "description": "basicAuthId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EndpointBasicAuthRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Admin Endpoints"
        ],
        "summary": "updateBasicAuthConfiguration",
        "operationId": "updateBasicAuthConfigurationUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "basicAuthId",
            "in": "path",
            "description": "basicAuthId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "createRepresentation",
            "description": "createRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateEndpointBasicAuthRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EndpointBasicAuthRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Admin Endpoints"
        ],
        "summary": "removeBasicAuthonfiguration",
        "operationId": "removeBasicAuthonfigurationUsingDELETE_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "basicAuthId",
            "in": "path",
            "description": "basicAuthId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/enterprise/admin/endpoints": {
      "get": {
        "tags": [
          "Admin Endpoints"
        ],
        "summary": "getEndpointConfigurations",
        "operationId": "getEndpointConfigurationsUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EndpointConfigurationRepresentation"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Admin Endpoints"
        ],
        "summary": "createEndpointConfiguration",
        "operationId": "createEndpointConfigurationUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "representation",
            "description": "representation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndpointConfigurationRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EndpointConfigurationRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/admin/endpoints/{endpointConfigurationId}": {
      "get": {
        "tags": [
          "Admin Endpoints"
        ],
        "summary": "getEndpointConfiguration",
        "operationId": "getEndpointConfigurationUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpointConfigurationId",
            "in": "path",
            "description": "endpointConfigurationId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EndpointConfigurationRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Admin Endpoints"
        ],
        "summary": "updateEndpointConfiguration",
        "operationId": "updateEndpointConfigurationUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpointConfigurationId",
            "in": "path",
            "description": "endpointConfigurationId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "representation",
            "description": "representation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndpointConfigurationRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EndpointConfigurationRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Admin Endpoints"
        ],
        "summary": "removeEndpointConfiguration",
        "operationId": "removeEndpointConfigurationUsingDELETE_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpointConfigurationId",
            "in": "path",
            "description": "endpointConfigurationId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/enterprise/admin/groups": {
      "get": {
        "tags": [
          "Admin Groups"
        ],
        "summary": "getGroups",
        "operationId": "getGroupsUsingGET_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "functional",
            "in": "query",
            "description": "functional",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "summary",
            "in": "query",
            "description": "summary",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LightGroupRepresentation"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Admin Groups"
        ],
        "summary": "createNewGroup",
        "operationId": "createNewGroupUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "groupRepresentation",
            "description": "groupRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GroupRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/admin/groups/{groupId}": {
      "get": {
        "tags": [
          "Admin Groups"
        ],
        "summary": "getGroup",
        "operationId": "getGroupUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "includeAllUsers",
            "in": "query",
            "description": "includeAllUsers",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "summary",
            "in": "query",
            "description": "summary",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AbstractGroupRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Admin Groups"
        ],
        "summary": "updateGroup",
        "operationId": "updateGroupUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "groupRepresentation",
            "description": "groupRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GroupRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Admin Groups"
        ],
        "summary": "deleteGroup",
        "operationId": "deleteGroupUsingDELETE_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/enterprise/admin/groups/{groupId}/action/activate": {
      "post": {
        "tags": [
          "Admin Groups"
        ],
        "summary": "activate",
        "operationId": "activateUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/admin/groups/{groupId}/add-all-users": {
      "post": {
        "tags": [
          "Admin Groups"
        ],
        "summary": "addAllUsersToGroup",
        "operationId": "addAllUsersToGroupUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/admin/groups/{groupId}/capabilities": {
      "post": {
        "tags": [
          "Admin Groups"
        ],
        "summary": "addGroupCapabilities",
        "operationId": "addGroupCapabilitiesUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "addGroupCapabilitiesRepresentation",
            "description": "addGroupCapabilitiesRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddGroupCapabilitiesRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/admin/groups/{groupId}/capabilities/{groupCapabilityId}": {
      "delete": {
        "tags": [
          "Admin Groups"
        ],
        "summary": "deleteGroupCapability",
        "operationId": "deleteGroupCapabilityUsingDELETE_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "groupCapabilityId",
            "in": "path",
            "description": "groupCapabilityId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/enterprise/admin/groups/{groupId}/members/{userId}": {
      "post": {
        "tags": [
          "Admin Groups"
        ],
        "summary": "addGroupMember",
        "operationId": "addGroupMemberUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Admin Groups"
        ],
        "summary": "deleteGroupMember",
        "operationId": "deleteGroupMemberUsingDELETE_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/enterprise/admin/groups/{groupId}/potential-capabilities": {
      "get": {
        "tags": [
          "Admin Groups"
        ],
        "summary": "getCapabilities",
        "operationId": "getCapabilitiesUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/admin/groups/{groupId}/related-groups": {
      "get": {
        "tags": [
          "Admin Groups"
        ],
        "summary": "getRelatedGroups",
        "operationId": "getRelatedGroupsUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LightGroupRepresentation"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/admin/groups/{groupId}/related-groups/{relatedGroupId}": {
      "post": {
        "tags": [
          "Admin Groups"
        ],
        "summary": "addRelatedGroup",
        "operationId": "addRelatedGroupUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "relatedGroupId",
            "in": "path",
            "description": "relatedGroupId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Admin Groups"
        ],
        "summary": "deleteRelatedGroup",
        "operationId": "deleteRelatedGroupUsingDELETE_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "relatedGroupId",
            "in": "path",
            "description": "relatedGroupId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/enterprise/admin/groups/{groupId}/users": {
      "get": {
        "tags": [
          "Admin Groups"
        ],
        "summary": "getGroupUsers",
        "operationId": "getGroupUsersUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/admin/tenants": {
      "get": {
        "tags": [
          "Admin Tenants"
        ],
        "summary": "Get all tenants",
        "description": "Tenant manager only",
        "operationId": "getTenantsUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LightTenantRepresentation"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Admin Tenants"
        ],
        "summary": "Create a new tenant",
        "description": "Tenant manager only",
        "operationId": "createTenantUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createTenantRepresentation",
            "description": "createTenantRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTenantRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LightTenantRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/admin/tenants/{tenantId}": {
      "get": {
        "tags": [
          "Admin Tenants"
        ],
        "summary": "Get tenant details",
        "operationId": "getTenantUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "tenantId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TenantRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Admin Tenants"
        ],
        "summary": "Update a tenant",
        "operationId": "updateUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "tenantId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "createTenantRepresentation",
            "description": "createTenantRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTenantRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TenantRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Admin Tenants"
        ],
        "summary": "Delete a tenant",
        "operationId": "deleteTenantUsingDELETE_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "tenantId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/enterprise/admin/tenants/{tenantId}/events": {
      "get": {
        "tags": [
          "Admin Tenants"
        ],
        "summary": "Get tenant events",
        "operationId": "getTenantEventsUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "tenantId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TenantEvent"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/admin/tenants/{tenantId}/logo": {
      "get": {
        "tags": [
          "Admin Tenants"
        ],
        "summary": "Get tenant logo",
        "operationId": "getTenantLogoUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "tenantId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Admin Tenants"
        ],
        "summary": "Update tenant logo",
        "operationId": "uploadTenantLogoUsingPOST_1",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "description": "tenantId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImageUploadRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/admin/users": {
      "get": {
        "tags": [
          "Admin Users"
        ],
        "summary": "Get a list of users",
        "operationId": "getUsersUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountType",
            "in": "query",
            "description": "accountType",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort",
            "required": false,
            "type": "string"
          },
          {
            "name": "company",
            "in": "query",
            "description": "company",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "groupId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "summary",
            "in": "query",
            "description": "summary",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Admin Users"
        ],
        "summary": "Create a new user",
        "operationId": "createNewUserUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userRepresentation",
            "description": "userRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Admin Users"
        ],
        "summary": "Bulk Update a list of users",
        "operationId": "bulkUpdateUsersUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "update",
            "description": "update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkUserUpdateRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/admin/users/{userId}": {
      "get": {
        "tags": [
          "Admin Users"
        ],
        "summary": "Retrieve user information",
        "operationId": "getUserUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "summary",
            "in": "query",
            "description": "summary",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AbstractUserRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Admin Users"
        ],
        "summary": "Update user details",
        "operationId": "updateUserDetailsUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "userRepresentation",
            "description": "userRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/app-definitions/import": {
      "post": {
        "tags": [
          "Apps",
          "Apps Definition"
        ],
        "summary": "Import App Definition",
        "description": "This is useful to bootstrap an environment (for users or continous integration).",
        "operationId": "importAppDefinitionUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppDefinitionRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/app-definitions/{modelId}/export": {
      "get": {
        "tags": [
          "Apps",
          "Apps Definition"
        ],
        "summary": "Export App Definition",
        "description": "This will return a zip file containing the app definition model and all related models (process definitions and forms).",
        "operationId": "exportAppDefinitionUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "modelId from a runtime app or the id of an app definition model",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/app-definitions/{modelId}/import": {
      "post": {
        "tags": [
          "Apps",
          "Apps Definition"
        ],
        "summary": "Import App",
        "description": "To import an app to an existing app definition to create a new version instead of importing a new app definition.",
        "operationId": "importAppDefinitionUsingPOST_1",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "modelId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppDefinitionRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/app-definitions/{modelId}/publish": {
      "post": {
        "tags": [
          "Apps",
          "Apps Definition"
        ],
        "summary": "Publish App",
        "description": "Before an app model can be used, it need to be published",
        "operationId": "publishAppDefinitionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "modelId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "publishModel",
            "description": "publishModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppDefinitionPublishRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppDefinitionUpdateResultRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/app-version": {
      "get": {
        "tags": [
          "About"
        ],
        "summary": "Server Information",
        "description": "Retrieve information about the Activiti BPM Suite version",
        "operationId": "getAppVersionUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/content": {
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "createTemporaryRelatedContent",
        "operationId": "createTemporaryRelatedContentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "relatedContent",
            "description": "relatedContent",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RelatedContentRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelatedContentRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/content/raw": {
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "createTemporaryRawRelatedContent",
        "operationId": "createTemporaryRawRelatedContentUsingPOST_1",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelatedContentRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/content/{contentId}": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "getContent",
        "operationId": "getContentUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "contentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelatedContentRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Content"
        ],
        "summary": "deleteContent",
        "operationId": "deleteContentUsingDELETE_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "contentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/enterprise/content/{contentId}/raw": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "getRawContent",
        "operationId": "getRawContentUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "contentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/content/{contentId}/rendition/{renditionType}": {
      "get": {
        "tags": [
          "Content Rendition"
        ],
        "summary": "Retrieve Raw Content",
        "operationId": "getRawContentUsingGET_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "contentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "renditionType",
            "in": "path",
            "description": "renditionType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/editor/form-models/values": {
      "get": {
        "tags": [
          "Editor"
        ],
        "summary": "getForms",
        "operationId": "getFormsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FormRepresentation"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/editor/form-models/{formId}": {
      "get": {
        "tags": [
          "Editor"
        ],
        "summary": "getForm",
        "operationId": "getFormUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "description": "formId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FormRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Editor"
        ],
        "summary": "saveForm",
        "operationId": "saveFormUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "description": "formId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "saveRepresentation",
            "description": "saveRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FormSaveRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FormRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/editor/form-models/{formId}/history/{formHistoryId}": {
      "get": {
        "tags": [
          "Editor"
        ],
        "summary": "getFormHistory",
        "operationId": "getFormHistoryUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "description": "formId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "formHistoryId",
            "in": "path",
            "description": "formHistoryId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FormRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/editor/form-models/{formId}/validate": {
      "put": {
        "tags": [
          "Editor"
        ],
        "summary": "validateModel",
        "operationId": "validateModelUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "description": "formId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "saveRepresentation",
            "description": "saveRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FormSaveRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationErrorRepresentation"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/filters/processes": {
      "get": {
        "tags": [
          "User Filters"
        ],
        "summary": "Retrieve list of taks filters",
        "operationId": "getUserProcessInstanceFiltersUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "description": "appId",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "User Filters"
        ],
        "summary": "Create a user process instance task filter",
        "operationId": "createUserProcessInstanceFilterUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userProcessInstanceFilterRepresentation",
            "description": "userProcessInstanceFilterRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserProcessInstanceFilterRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserProcessInstanceFilterRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "User Filters"
        ],
        "summary": "To order the list of user process instance filters",
        "operationId": "orderUserProcessInstanceFiltersUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "filterOrderRepresentation",
            "description": "filterOrderRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserFilterOrderRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/filters/processes/{userFilterId}": {
      "get": {
        "tags": [
          "User Filters"
        ],
        "summary": "Get a specific user process instance task filter",
        "operationId": "getUserProcessInstanceFilterUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userFilterId",
            "in": "path",
            "description": "userFilterId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserProcessInstanceFilterRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "User Filters"
        ],
        "summary": "Update a user process instance task filter",
        "operationId": "updateUserProcessInstanceFilterUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userFilterId",
            "in": "path",
            "description": "userFilterId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "userProcessInstanceFilterRepresentation",
            "description": "userProcessInstanceFilterRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserProcessInstanceFilterRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserProcessInstanceFilterRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "User Filters"
        ],
        "summary": "Delete a user process instance task filter",
        "operationId": "deleteUserProcessInstanceFilterUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userFilterId",
            "in": "path",
            "description": "userFilterId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/enterprise/filters/tasks": {
      "get": {
        "tags": [
          "User Filters"
        ],
        "summary": "Retrieve list of task filters",
        "operationId": "getUserTaskFiltersUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "description": "appId",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "User Filters"
        ],
        "summary": "Create a new task filter",
        "operationId": "createUserTaskFilterUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userTaskFilterRepresentation",
            "description": "userTaskFilterRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserTaskFilterRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserTaskFilterRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "User Filters"
        ],
        "summary": "To order the list of user task filters",
        "operationId": "orderUserTaskFiltersUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "filterOrderRepresentation",
            "description": "filterOrderRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserFilterOrderRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/filters/tasks/{userFilterId}": {
      "get": {
        "tags": [
          "User Filters"
        ],
        "summary": "Get a specific task filter",
        "operationId": "getUserTaskFilterUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userFilterId",
            "in": "path",
            "description": "userFilterId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserTaskFilterRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "User Filters"
        ],
        "summary": "Update a specific task filter",
        "operationId": "updateUserTaskFilterUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userFilterId",
            "in": "path",
            "description": "userFilterId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "userTaskFilterRepresentation",
            "description": "userTaskFilterRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserTaskFilterRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserTaskFilterRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "User Filters"
        ],
        "summary": "Delete a task filter",
        "operationId": "deleteUserTaskFilterUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userFilterId",
            "in": "path",
            "description": "userFilterId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/enterprise/groups": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "List groups",
        "operationId": "getGroupsUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "groupId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "externalId",
            "in": "query",
            "description": "externalId",
            "required": false,
            "type": "string"
          },
          {
            "name": "externalIdCaseInsensitive",
            "in": "query",
            "description": "externalIdCaseInsensitive",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/groups/{groupId}/users": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "List users member of a specific group",
        "operationId": "getUsersForGroupUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/idm-sync-log-entries": {
      "get": {
        "tags": [
          "IDM Sync"
        ],
        "summary": "getSyncLogEntries",
        "operationId": "getSyncLogEntriesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SyncLogEntryRepresentation"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/idm-sync-log-entries/{syncLogEntryId}/logfile": {
      "get": {
        "tags": [
          "IDM Sync"
        ],
        "summary": "getLogFile",
        "operationId": "getLogFileUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "syncLogEntryId",
            "in": "path",
            "description": "syncLogEntryId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/idm/passwords": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Request password reset ",
        "operationId": "requestPasswordResetUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resetPassword",
            "description": "resetPassword",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/integration/alfresco-cloud/confirm-auth-request": {
      "get": {
        "tags": [
          "Alfresco",
          "Integration",
          "Integration Alfresco Cloud"
        ],
        "summary": "Alfresco Cloud Authorization",
        "description": "Returns Alfresco Oauth HTML Page",
        "operationId": "confirmAuthorisationUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html",
          "application/json"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/integration/alfresco-cloud/networks": {
      "get": {
        "tags": [
          "Alfresco",
          "Integration",
          "Integration Alfresco Cloud"
        ],
        "summary": "List Alfresco networks",
        "operationId": "getAllNetworksUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/integration/alfresco-cloud/networks/{networkId}/folders/{folderId}/content": {
      "get": {
        "tags": [
          "Alfresco",
          "Integration",
          "Integration Alfresco Cloud"
        ],
        "summary": "List file & folders inside a specific folder",
        "operationId": "getContentInFolderUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "networkId",
            "required": true,
            "type": "string"
          },
          {
            "name": "folderId",
            "in": "path",
            "description": "folderId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/integration/alfresco-cloud/networks/{networkId}/sites": {
      "get": {
        "tags": [
          "Alfresco",
          "Integration",
          "Integration Alfresco Cloud"
        ],
        "summary": "List Alfresco sites",
        "description": "Returns ALL Sites",
        "operationId": "getAllSitesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "networkId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/integration/alfresco-cloud/networks/{networkId}/sites/{siteId}/content": {
      "get": {
        "tags": [
          "Alfresco",
          "Integration",
          "Integration Alfresco Cloud"
        ],
        "summary": "List file & folders inside a specific site",
        "operationId": "getContentInSiteUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "networkId",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteId",
            "in": "path",
            "description": "siteId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/integration/alfresco/{repositoryId}/folders/{folderId}/content": {
      "get": {
        "tags": [
          "Alfresco",
          "Integration",
          "Integration Alfresco OnPremise"
        ],
        "summary": "List file & folders inside a specific folder",
        "operationId": "getContentInFolderUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repositoryId",
            "in": "path",
            "description": "repositoryId",
            "required": true,
            "type": "string"
          },
          {
            "name": "folderId",
            "in": "path",
            "description": "folderId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/integration/alfresco/{repositoryId}/sites": {
      "get": {
        "tags": [
          "Alfresco",
          "Integration",
          "Integration Alfresco OnPremise"
        ],
        "summary": "List Alfresco sites",
        "description": "Returns ALL Sites",
        "operationId": "getAllSitesUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repositoryId",
            "in": "path",
            "description": "repositoryId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/integration/alfresco/{repositoryId}/sites/{siteId}/content": {
      "get": {
        "tags": [
          "Alfresco",
          "Integration",
          "Integration Alfresco OnPremise"
        ],
        "summary": "List file & folders inside a specific site",
        "operationId": "getContentInSiteUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repositoryId",
            "in": "path",
            "description": "repositoryId",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteId",
            "in": "path",
            "description": "siteId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/integration/box/confirm-auth-request": {
      "get": {
        "tags": [
          "Integration",
          "Integration Box"
        ],
        "summary": "Box Authorization",
        "description": "Returns Box Oauth HTML Page",
        "operationId": "confirmAuthorisationUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html",
          "application/json"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/integration/box/files": {
      "get": {
        "tags": [
          "Integration",
          "Integration Box"
        ],
        "summary": "List file & folders",
        "operationId": "getFilesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "description": "parent",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/integration/box/status": {
      "get": {
        "tags": [
          "Integration",
          "Integration Box"
        ],
        "summary": "Retrieve if Box Integration is enabled",
        "operationId": "getBoxPluginStatusUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/integration/box/{userId}/account": {
      "get": {
        "tags": [
          "Integration",
          "Integration Box"
        ],
        "summary": "List Box Account",
        "operationId": "getRepositoryAccountUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BoxUserAccountCredentialsRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Integration",
          "Integration Box"
        ],
        "summary": "Create Box account",
        "operationId": "createRepositoryAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "credentials",
            "description": "credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserAccountCredentialsRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Integration",
          "Integration Box"
        ],
        "summary": "Update Box account",
        "operationId": "updateRepositoryAccountUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "credentials",
            "description": "credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserAccountCredentialsRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Integration",
          "Integration Box"
        ],
        "summary": "Delete Box account",
        "operationId": "deleteRepositoryAccountUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/enterprise/integration/google-drive/confirm-auth-request": {
      "get": {
        "tags": [
          "Integration",
          "Integration Drive"
        ],
        "summary": "Drive Authorization",
        "description": "Returns Drive Oauth HTML Page",
        "operationId": "confirmAuthorisationUsingGET_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html",
          "application/json"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/integration/google-drive/files": {
      "get": {
        "tags": [
          "Integration",
          "Integration Drive"
        ],
        "summary": "List file & folders",
        "operationId": "getFilesUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "description": "parent",
            "required": false,
            "type": "string"
          },
          {
            "name": "currentFolderOnly",
            "in": "query",
            "description": "currentFolderOnly",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/models": {
      "get": {
        "tags": [
          "Models"
        ],
        "summary": "List models (process, form, decision rule or app)",
        "operationId": "getModelsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort",
            "required": false,
            "type": "string"
          },
          {
            "name": "modelType",
            "in": "query",
            "description": "modelType",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "referenceId",
            "in": "query",
            "description": "referenceId",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Models"
        ],
        "summary": "To create a new model",
        "operationId": "createModelUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "modelRepresentation",
            "description": "modelRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/models-for-app-definition": {
      "get": {
        "tags": [
          "Models"
        ],
        "summary": "TODO",
        "operationId": "getModelsToIncludeInAppDefinitionUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/models/{modelId}": {
      "get": {
        "tags": [
          "Models"
        ],
        "summary": "To retrieve details about a particular model (process, form, decision rule or app)",
        "operationId": "getModelUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "modelId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "includePermissions",
            "in": "query",
            "description": "includePermissions",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Models"
        ],
        "summary": "Edit a specific model",
        "operationId": "updateModelUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "modelId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "updatedModel",
            "description": "updatedModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Models"
        ],
        "summary": "Delete a model",
        "operationId": "deleteModelUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "modelId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "cascade",
            "in": "query",
            "description": "cascade",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "deleteRuntimeApp",
            "in": "query",
            "description": "deleteRuntimeApp",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/enterprise/models/{modelId}/clone": {
      "post": {
        "tags": [
          "Models"
        ],
        "summary": "To duplicate an existing model",
        "operationId": "duplicateModelUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "modelId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "modelRepresentation",
            "description": "modelRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/models/{modelId}/editor/json": {
      "get": {
        "tags": [
          "Models"
        ],
        "summary": "Get the JSON model",
        "operationId": "getModelJSONUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "modelId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ObjectNode"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Models"
        ],
        "summary": "Save the JSON model",
        "operationId": "saveModelUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "modelId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "values",
            "description": "values",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/List"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/models/{modelId}/editor/validate": {
      "post": {
        "tags": [
          "Models"
        ],
        "summary": "Validate the JSON model",
        "operationId": "validateModelUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "modelId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "values",
            "description": "values",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/List"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationErrorRepresentation"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/models/{modelId}/history": {
      "get": {
        "tags": [
          "Models History"
        ],
        "summary": "To get the version information for a model",
        "operationId": "getModelHistoryCollectionUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "modelId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "includeLatestVersion",
            "in": "query",
            "description": "includeLatestVersion",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/models/{modelId}/history/{modelHistoryId}": {
      "get": {
        "tags": [
          "Models History"
        ],
        "summary": "To get a particular older version of a model",
        "operationId": "getProcessModelHistoryUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "modelId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "modelHistoryId",
            "in": "path",
            "description": "modelHistoryId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/models/{modelId}/newversion": {
      "post": {
        "tags": [
          "Models"
        ],
        "summary": "Create a new model version",
        "operationId": "importNewVersionUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "modelId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/models/{modelId}/thumbnail": {
      "get": {
        "tags": [
          "Models"
        ],
        "summary": "Get Model thumbnail",
        "operationId": "getModelThumbnailUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "image/png",
          "application/json"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "modelId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/models/{processModelId}/bpmn20": {
      "get": {
        "tags": [
          "Model Bpmn"
        ],
        "summary": "Export a process definition model to a BPMN 2.0 xml file",
        "operationId": "getProcessModelBpmn20XmlUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "processModelId",
            "in": "path",
            "description": "processModelId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/models/{processModelId}/history/{processModelHistoryId}/bpmn20": {
      "get": {
        "tags": [
          "Model Bpmn"
        ],
        "summary": "Export a previous process definition model to a BPMN 2.0 xml file",
        "operationId": "getHistoricProcessModelBpmn20XmlUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "processModelId",
            "in": "path",
            "description": "processModelId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "processModelHistoryId",
            "in": "path",
            "description": "processModelHistoryId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/process-definitions": {
      "get": {
        "tags": [
          "Process",
          "Process Definitions"
        ],
        "summary": "Retrieve a list of process definitions",
        "description": "Get a list of process definitions (visible within the tenant of the user)",
        "operationId": "getProcessDefinitionsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "latest",
            "in": "query",
            "description": "latest",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "appDefinitionId",
            "in": "query",
            "description": "appDefinitionId",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/process-definitions/{processDefinitionId}/start-form": {
      "get": {
        "tags": [
          "Process",
          "Process Definitions Form"
        ],
        "summary": "Retrieve the start form for a process definition",
        "operationId": "getProcessDefinitionStartFormUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FormDefinitionRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/process-definitions/{processDefinitionId}/start-form-values/{field}": {
      "get": {
        "tags": [
          "Process",
          "Process Definitions Form"
        ],
        "summary": "Retrieve field values (eg. the typeahead field)",
        "operationId": "getRestFieldValuesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FormValueRepresentation"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/process-definitions/{processDefinitionId}/start-form-values/{field}/{column}": {
      "get": {
        "tags": [
          "Process",
          "Process Definitions Form"
        ],
        "summary": "Retrieve field values (eg. the table field)",
        "operationId": "getRestTableFieldValuesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FormValueRepresentation"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/process-instances": {
      "post": {
        "tags": [
          "Process",
          "Process Instances Information"
        ],
        "summary": "Start a process instance",
        "operationId": "startNewProcessInstanceUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "startRequest",
            "description": "startRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProcessInstanceRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProcessInstanceRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/process-instances/filter": {
      "post": {
        "tags": [
          "Process",
          "Process Instances Listing"
        ],
        "summary": "Filter a list of process instances",
        "operationId": "filterProcessInstancesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "filterRequest",
            "description": "filterRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessInstanceFilterRequestRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/process-instances/query": {
      "post": {
        "tags": [
          "Process",
          "Process Instances Listing"
        ],
        "summary": "Retrieve a list of process instances",
        "operationId": "getProcessInstancesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "requestNode",
            "description": "requestNode",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ObjectNode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/process-instances/{processInstanceId}": {
      "get": {
        "tags": [
          "Process",
          "Process Instances"
        ],
        "summary": "Retrieve a process instance information",
        "operationId": "getProcessInstanceUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "processInstanceId",
            "in": "path",
            "description": "processInstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProcessInstanceRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Process",
          "Process Instances"
        ],
        "summary": "Delete a process instance",
        "operationId": "deleteProcessInstanceUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "processInstanceId",
            "in": "path",
            "description": "processInstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/enterprise/process-instances/{processInstanceId}/comments": {
      "get": {
        "tags": [
          "Process Instances",
          "Comments"
        ],
        "summary": "Comment list added to Process",
        "operationId": "getProcessInstanceCommentsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "processInstanceId",
            "in": "path",
            "description": "processInstanceId",
            "required": true,
            "type": "string"
          },
          {
            "name": "latestFirst",
            "in": "query",
            "description": "latestFirst",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Process Instances",
          "Comments"
        ],
        "summary": "Add a comment to a Process",
        "operationId": "addProcessInstanceCommentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "commentRequest",
            "description": "commentRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommentRepresentation"
            }
          },
          {
            "name": "processInstanceId",
            "in": "path",
            "description": "processInstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CommentRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/process-instances/{processInstanceId}/content": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "getRelatedContentForProcessInstance",
        "operationId": "getRelatedContentForProcessInstanceUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "processInstanceId",
            "in": "path",
            "description": "processInstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "createRelatedContentOnProcessInstance",
        "operationId": "createRelatedContentOnProcessInstanceUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "processInstanceId",
            "in": "path",
            "description": "processInstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "relatedContent",
            "description": "relatedContent",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RelatedContentRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelatedContentRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/process-instances/{processInstanceId}/field-content": {
      "get": {
        "tags": [
          "Content",
          "Process",
          "Process Instances Information"
        ],
        "summary": "Retrieve content attached to process instance fields",
        "operationId": "getProcessInstanceContentUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "processInstanceId",
            "in": "path",
            "description": "processInstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/process-instances/{processInstanceId}/raw-content": {
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "createRelatedContentOnProcessInstance",
        "operationId": "createRelatedContentOnProcessInstanceUsingPOST_1",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "processInstanceId",
            "in": "path",
            "description": "processInstanceId",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelatedContentRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/process-instances/{processInstanceId}/start-form": {
      "get": {
        "tags": [
          "Process",
          "Process Instances"
        ],
        "summary": "Get process start form",
        "description": "When a process definitions has a start form (hasStartForm is true in the call above), the start form can be retrieved",
        "operationId": "getProcessInstanceStartFormUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "processInstanceId",
            "in": "path",
            "description": "processInstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FormDefinitionRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/process-models/import": {
      "post": {
        "tags": [
          "Models"
        ],
        "summary": "To import a BPMN 2.0 xml file",
        "operationId": "importProcessModelUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/process-scopes": {
      "post": {
        "tags": [
          "Process Scope"
        ],
        "summary": "getRuntimeProcessScopes",
        "operationId": "getRuntimeProcessScopesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "processScopesRequest",
            "description": "processScopesRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessScopesRequestRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessScopeRepresentation"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/profile": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Retrieve user information",
        "description": " This is useful to get the name, email, the groups that the user is part of, the user picture, etc.",
        "operationId": "getProfileUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Update user information",
        "description": "Only a first name, last name, email and company can be updated",
        "operationId": "updateProfile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userRepresentation",
            "description": "userRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/profile-password": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Change user password",
        "operationId": "changePasswordUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "changePasswordRepresentation",
            "description": "changePasswordRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePasswordRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/profile-picture": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Retrieve user profile picture",
        "description": "Generally returns an image file",
        "operationId": "getProfilePictureUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Change user profile picture",
        "operationId": "uploadProfilePictureUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImageUploadRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/profile/accounts/alfresco": {
      "get": {
        "tags": [
          "Alfresco",
          "Integration",
          "Integration Alfresco OnPremise"
        ],
        "summary": "List Alfresco repositories",
        "description": "A tenant administrator can configure one or more Alfresco repositories to use when working with content.",
        "operationId": "getRepositoriesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "includeAccounts",
            "in": "query",
            "description": "includeAccounts",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/runtime-app-definitions": {
      "get": {
        "tags": [
          "Apps",
          "Apps Runtime"
        ],
        "summary": "List runtime apps",
        "description": "When a user logs in into the Alfresco Activiti BPM Suite, the landing page is displayed containing all the apps that the user is allowed to see and use.",
        "operationId": "getAppDefinitionsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Apps",
          "Apps Runtime"
        ],
        "summary": "Deploy published app",
        "description": "After creating and puclished an app the user can add it to his/her landing page.",
        "operationId": "deployAppDefinitionsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "saveObject",
            "description": "saveObject",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RuntimeAppDefinitionSaveRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/script-files/controllers": {
      "get": {
        "tags": [
          "Script File"
        ],
        "summary": "getControllers",
        "operationId": "getControllersUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/javascript"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/script-files/libraries": {
      "get": {
        "tags": [
          "Script File"
        ],
        "summary": "getLibraries",
        "operationId": "getLibrariesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/javascript"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/system/properties": {
      "get": {
        "tags": [
          "System Properties"
        ],
        "summary": "Retrieve System Properties",
        "description": "Typical value is AllowInvolveByEmail",
        "operationId": "getPropertiesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SystemPropertiesRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/task-forms/{taskId}": {
      "get": {
        "tags": [
          "Task",
          "Task Forms"
        ],
        "summary": "Retrieve Task Form",
        "operationId": "getTaskFormUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FormDefinitionRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Task",
          "Task Forms"
        ],
        "summary": "Complete a Task Form",
        "operationId": "completeTaskFormUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "completeTaskFormRepresentation",
            "description": "completeTaskFormRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompleteFormRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/task-forms/{taskId}/form-values/{field}": {
      "get": {
        "tags": [
          "Task",
          "Task Forms"
        ],
        "summary": "Retrieve Populated Field Values",
        "description": "Form field values that are populated through a REST backend, can be retrieved via this service",
        "operationId": "getRestFieldValuesUsingGET_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string"
          },
          {
            "name": "field",
            "in": "path",
            "description": "field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FormValueRepresentation"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/task-forms/{taskId}/form-values/{field}/{column}": {
      "get": {
        "tags": [
          "Task",
          "Task Forms"
        ],
        "summary": "Retrieve Column Field Values",
        "description": "Specific case to retrieve information on a specific column",
        "operationId": "getRestFieldValuesUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string"
          },
          {
            "name": "field",
            "in": "path",
            "description": "field",
            "required": true,
            "type": "string"
          },
          {
            "name": "column",
            "in": "path",
            "description": "column",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FormValueRepresentation"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/task-forms/{taskId}/save-form": {
      "post": {
        "tags": [
          "Task",
          "Task Forms"
        ],
        "summary": "Save Task Form",
        "operationId": "saveTaskFormUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "saveTaskFormRepresentation",
            "description": "saveTaskFormRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveFormRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/tasks": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Create a Standalone Task",
        "description": "Standalone Task is not associated with a process instance. You can define only task name & description",
        "operationId": "createNewTaskUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "taskRepresentation",
            "description": "taskRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/tasks/filter": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Filter list of Task",
        "operationId": "filterTasksUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "requestNode",
            "description": "requestNode",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskFilterRequestRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/tasks/query": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "List Task",
        "operationId": "listTasksUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "requestNode",
            "description": "requestNode",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ObjectNode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/tasks/{taskId}": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Task Details",
        "operationId": "getTaskUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Task"
        ],
        "summary": "Update Task Details",
        "description": "You can edit only name, description and dueDate (ISO 8601 string).",
        "operationId": "updateTaskUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "updated",
            "description": "updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskUpdateRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Task"
        ],
        "summary": "Delete a Task",
        "operationId": "deleteTaskUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/enterprise/tasks/{taskId}/action/assign": {
      "put": {
        "tags": [
          "Task",
          "Task Actions"
        ],
        "summary": "Assign a task to a user",
        "operationId": "assignTaskUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "requestNode",
            "description": "requestNode",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ObjectNode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/tasks/{taskId}/action/attach-form": {
      "put": {
        "tags": [
          "Task",
          "Task Actions"
        ],
        "summary": "Attach a form to a task",
        "operationId": "attachFormUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "requestNode",
            "description": "requestNode",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ObjectNode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/tasks/{taskId}/action/claim": {
      "put": {
        "tags": [
          "Task",
          "Task Actions"
        ],
        "summary": "Claim a task",
        "description": "To claim a task (in case the task is assigned to a group)",
        "operationId": "claimTaskUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/tasks/{taskId}/action/complete": {
      "put": {
        "tags": [
          "Task",
          "Task Actions"
        ],
        "summary": "Complete Task",
        "description": "To complete a task (standalone or without a task form)",
        "operationId": "completeTaskUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/tasks/{taskId}/action/involve": {
      "put": {
        "tags": [
          "Task",
          "Task Actions"
        ],
        "summary": "To involve a user with a task",
        "operationId": "involveUserUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "requestNode",
            "description": "requestNode",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ObjectNode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/tasks/{taskId}/action/remove-form": {
      "delete": {
        "tags": [
          "Task",
          "Task Actions"
        ],
        "summary": "Remove a form to a task",
        "operationId": "removeFormUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/enterprise/tasks/{taskId}/action/remove-involved": {
      "put": {
        "tags": [
          "Task",
          "Task Actions"
        ],
        "summary": "Remove an involved user from a task",
        "operationId": "removeInvolvedUserUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "requestNode",
            "description": "requestNode",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ObjectNode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/tasks/{taskId}/action/unclaim": {
      "put": {
        "tags": [
          "Task",
          "Task Actions"
        ],
        "summary": "Unclaim a task",
        "description": "To unclaim a task (in case the task was assigned to a group)",
        "operationId": "unclaimTaskUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/tasks/{taskId}/checklist": {
      "get": {
        "tags": [
          "Task",
          "Task CheckList"
        ],
        "summary": "Retrieve Checklist added to a task",
        "operationId": "getChecklistUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Task",
          "Task CheckList"
        ],
        "summary": "Create a task checklist",
        "operationId": "addSubtaskUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "taskRepresentation",
            "description": "taskRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Task",
          "Task CheckList"
        ],
        "summary": "Change the order of items on a checklist",
        "operationId": "orderChecklistUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "orderRepresentation",
            "description": "orderRepresentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChecklistOrderRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/tasks/{taskId}/comments": {
      "get": {
        "tags": [
          "Task",
          "Comments"
        ],
        "summary": "Comment list added to Task",
        "operationId": "getTaskCommentsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string"
          },
          {
            "name": "latestFirst",
            "in": "query",
            "description": "latestFirst",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Task",
          "Comments"
        ],
        "summary": "Add a comment to a Task",
        "operationId": "addTaskCommentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "commentRequest",
            "description": "commentRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommentRepresentation"
            }
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CommentRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/tasks/{taskId}/content": {
      "get": {
        "tags": [
          "Task",
          "Content"
        ],
        "summary": "Retrieve which content is attached to a task",
        "operationId": "getRelatedContentForTaskUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Task",
          "Content"
        ],
        "summary": "To relate content (eg from Alfresco) to a task",
        "operationId": "createRelatedContentOnTaskUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "relatedContent",
            "description": "relatedContent",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RelatedContentRepresentation"
            }
          },
          {
            "name": "isRelatedContent",
            "in": "query",
            "description": "isRelatedContent",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelatedContentRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/tasks/{taskId}/raw-content": {
      "post": {
        "tags": [
          "Task",
          "Content"
        ],
        "summary": "Upload content to a task",
        "operationId": "createRelatedContentOnTaskUsingPOST_1",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          },
          {
            "name": "isRelatedContent",
            "in": "query",
            "description": "isRelatedContent",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelatedContentRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/temporary/example-headers": {
      "get": {
        "tags": [
          "Temporary"
        ],
        "summary": "getHeaders",
        "operationId": "getHeadersUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArrayNode"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/temporary/example-options": {
      "get": {
        "tags": [
          "Temporary"
        ],
        "summary": "getOptions",
        "operationId": "getOptionsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArrayNode"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/temporary/generate-report-data/complete-tasks": {
      "get": {
        "tags": [
          "Temporary"
        ],
        "summary": "completeTasks",
        "operationId": "completeTasksUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "processDefinitionKey",
            "in": "query",
            "description": "processDefinitionKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/temporary/generate-report-data/start-process": {
      "get": {
        "tags": [
          "Temporary"
        ],
        "summary": "generateData",
        "operationId": "generateDataUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "processDefinitionKey",
            "in": "query",
            "description": "processDefinitionKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/users": {
      "get": {
        "tags": [
          "User",
          "Users Workflow"
        ],
        "summary": "List users",
        "description": "A common use case is that a user wants to select another user (eg. when assigning a task) or group.",
        "operationId": "getUsersUsingGET_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "email",
            "required": false,
            "type": "string"
          },
          {
            "name": "externalId",
            "in": "query",
            "description": "externalId",
            "required": false,
            "type": "string"
          },
          {
            "name": "externalIdCaseInsensitive",
            "in": "query",
            "description": "externalIdCaseInsensitive",
            "required": false,
            "type": "string"
          },
          {
            "name": "excludeTaskId",
            "in": "query",
            "description": "excludeTaskId",
            "required": false,
            "type": "string"
          },
          {
            "name": "excludeProcessId",
            "in": "query",
            "description": "excludeProcessId",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "groupId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "tenantId",
            "in": "query",
            "description": "tenantId",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultListDataRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/users/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieve user information",
        "operationId": "getUserUsingGET_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Execute an action for a specific user",
        "description": "Typical action is updating/reset password",
        "operationId": "executeActionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "actionRequest",
            "description": "actionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserActionRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user information",
        "operationId": "updateUserUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "userRequest",
            "description": "userRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRepresentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserRepresentation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/enterprise/users/{userId}/picture": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieve user profile picture",
        "operationId": "getProfilePictureUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "RelatedContentRepresentation": {
      "properties": {
        "contentAvailable": {
          "type": "boolean"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "$ref": "#/definitions/LightUserRepresentation"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "link": {
          "type": "boolean"
        },
        "linkUrl": {
          "type": "string"
        },
        "mimeType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "previewStatus": {
          "type": "string"
        },
        "simpleType": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "sourceId": {
          "type": "string"
        },
        "thumbnailStatus": {
          "type": "string"
        }
      }
    },
    "MapÂ«string,ListÂ«VariableScopeRepresentationÂ»Â»": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/List"
      }
    },
    "UserTaskFilterRepresentation": {
      "properties": {
        "appId": {
          "type": "integer",
          "format": "int64"
        },
        "filter": {
          "$ref": "#/definitions/TaskFilterRepresentation"
        },
        "icon": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "recent": {
          "type": "boolean"
        }
      }
    },
    "TenantRepresentation": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "domain": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdate": {
          "type": "string",
          "format": "date-time"
        },
        "logoId": {
          "type": "integer",
          "format": "int64"
        },
        "maxUsers": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ModelRepresentation": {
      "properties": {
        "comment": {
          "type": "string"
        },
        "createdBy": {
          "type": "integer",
          "format": "int64"
        },
        "createdByFullName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "favorite": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedBy": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedByFullName": {
          "type": "string"
        },
        "latestVersion": {
          "type": "boolean"
        },
        "modelType": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "permission": {
          "type": "string"
        },
        "referenceId": {
          "type": "integer",
          "format": "int64"
        },
        "stencilSet": {
          "type": "integer",
          "format": "int64"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "UserAccountCredentialsRepresentation": {
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "AppDefinitionUpdateResultRepresentation": {
      "properties": {
        "appDefinition": {
          "$ref": "#/definitions/AppDefinitionRepresentation"
        },
        "customData": {
          "type": "object"
        },
        "error": {
          "type": "boolean"
        },
        "errorDescription": {
          "type": "string"
        },
        "errorType": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "messageKey": {
          "type": "string"
        }
      }
    },
    "FormSaveRepresentation": {
      "properties": {
        "comment": {
          "type": "string"
        },
        "formImageBase64": {
          "type": "string"
        },
        "formRepresentation": {
          "$ref": "#/definitions/FormRepresentation"
        },
        "newVersion": {
          "type": "boolean"
        },
        "processScopeIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessScopeIdentifierRepresentation"
          }
        },
        "reusable": {
          "type": "boolean"
        }
      }
    },
    "RestVariable": {
      "properties": {
        "name": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "object"
        },
        "valueUrl": {
          "type": "string"
        }
      }
    },
    "ImageUploadRepresentation": {
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "VariableScopeRepresentation": {
      "properties": {
        "mapVariable": {
          "type": "string"
        },
        "mappedColumn": {
          "type": "string"
        },
        "mappedDataModel": {
          "type": "integer",
          "format": "int64"
        },
        "mappedEntity": {
          "type": "string"
        },
        "mappedVariableName": {
          "type": "string"
        },
        "processVariableName": {
          "type": "string"
        },
        "processVariableType": {
          "type": "string"
        }
      }
    },
    "UserActionRepresentation": {
      "properties": {
        "action": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        },
        "oldPassword": {
          "type": "string"
        }
      }
    },
    "EndpointBasicAuthRepresentation": {
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "tenantId": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "EntityVariableScopeRepresentation": {
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityAttributeScopeRepresentation"
          }
        },
        "entityName": {
          "type": "string"
        },
        "mappedDataModel": {
          "type": "integer",
          "format": "int64"
        },
        "mappedVariableName": {
          "type": "string"
        }
      }
    },
    "ProcessScopeRepresentation": {
      "properties": {
        "activityIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "activityIdsByCollapsedSubProcessIdMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/List"
          }
        },
        "activityIdsByDecisionTableIdMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/List"
          }
        },
        "activityIdsByFormIdMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/List"
          }
        },
        "activityIdsWithExcludedSubProcess": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customStencilVariables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/List"
          }
        },
        "entityVariables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/List"
          }
        },
        "executionVariables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/List"
          }
        },
        "fieldToVariableMappings": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/List"
          }
        },
        "forms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormScopeRepresentation"
          }
        },
        "metadataVariables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/List"
          }
        },
        "modelId": {
          "type": "integer",
          "format": "int64"
        },
        "processModelType": {
          "type": "integer",
          "format": "int32"
        },
        "responseVariables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/List"
          }
        }
      }
    },
    "UserFilterOrderRepresentation": {
      "properties": {
        "appId": {
          "type": "integer",
          "format": "int64"
        },
        "order": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "GroupCapabilityRepresentation": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ChecklistOrderRepresentation": {
      "properties": {
        "order": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FormDefinitionRepresentation": {
      "properties": {
        "className": {
          "type": "string"
        },
        "customFieldTemplates": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormFieldRepresentation"
          }
        },
        "gridsterForm": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "javascriptEvents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormJavascriptEventRepresentation"
          }
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "outcomeTarget": {
          "type": "string"
        },
        "outcomes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormOutcomeRepresentation"
          }
        },
        "processDefinitionId": {
          "type": "string"
        },
        "processDefinitionKey": {
          "type": "string"
        },
        "processDefinitionName": {
          "type": "string"
        },
        "selectedOutcome": {
          "type": "string"
        },
        "style": {
          "type": "string"
        },
        "tabs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormTabRepresentation"
          }
        },
        "taskDefinitionKey": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "taskName": {
          "type": "string"
        }
      }
    },
    "LayoutRepresentation": {
      "properties": {
        "colspan": {
          "type": "integer",
          "format": "int32"
        },
        "column": {
          "type": "integer",
          "format": "int32"
        },
        "row": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ProcessInstanceFilterRequestRepresentation": {
      "properties": {
        "appDefinitionId": {
          "type": "integer",
          "format": "int64"
        },
        "filter": {
          "$ref": "#/definitions/ProcessInstanceFilterRepresentation"
        },
        "filterId": {
          "type": "integer",
          "format": "int64"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "EndpointRequestHeaderRepresentation": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "CommentRepresentation": {
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "$ref": "#/definitions/LightUserRepresentation"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "CreateTenantRepresentation": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "domain": {
          "type": "string"
        },
        "maxUsers": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CreateEndpointBasicAuthRepresentation": {
      "properties": {
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "tenantId": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "AbstractGroupRepresentation": {
      "properties": {
        "externalId": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "LightGroupRepresentation": {
      "properties": {
        "externalId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LightGroupRepresentation"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "FormScopeRepresentation": {
      "properties": {
        "description": {
          "type": "string"
        },
        "fieldVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormFieldRepresentation"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormFieldRepresentation"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "outcomes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormOutcomeRepresentation"
          }
        }
      }
    },
    "ResetPasswordRepresentation": {
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "TaskFilterRequestRepresentation": {
      "properties": {
        "appDefinitionId": {
          "type": "integer",
          "format": "int64"
        },
        "filter": {
          "$ref": "#/definitions/TaskFilterRepresentation"
        },
        "filterId": {
          "type": "integer",
          "format": "int64"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AbstractUserRepresentation": {
      "properties": {
        "email": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lastName": {
          "type": "string"
        },
        "pictureId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RuntimeAppDefinitionSaveRepresentation": {
      "properties": {
        "appDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppDefinitionRepresentation"
          }
        }
      }
    },
    "CreateProcessInstanceRepresentation": {
      "properties": {
        "name": {
          "type": "string"
        },
        "outcome": {
          "type": "string"
        },
        "processDefinitionId": {
          "type": "string"
        },
        "values": {
          "type": "object"
        }
      }
    },
    "EndpointConfigurationRepresentation": {
      "properties": {
        "basicAuthId": {
          "type": "integer",
          "format": "int64"
        },
        "basicAuthName": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "requestHeaders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndpointRequestHeaderRepresentation"
          }
        },
        "tenantId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ProcessScopeIdentifierRepresentation": {
      "properties": {
        "processActivityId": {
          "type": "string"
        },
        "processModelId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "File": {
      "properties": {
        "absolute": {
          "type": "boolean"
        },
        "absoluteFile": {
          "type": "file"
        },
        "absolutePath": {
          "type": "string"
        },
        "canonicalFile": {
          "type": "file"
        },
        "canonicalPath": {
          "type": "string"
        },
        "directory": {
          "type": "boolean"
        },
        "file": {
          "type": "boolean"
        },
        "freeSpace": {
          "type": "integer",
          "format": "int64"
        },
        "hidden": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "parent": {
          "type": "string"
        },
        "parentFile": {
          "type": "file"
        },
        "path": {
          "type": "string"
        },
        "totalSpace": {
          "type": "integer",
          "format": "int64"
        },
        "usableSpace": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "BulkUserUpdateRepresentation": {
      "properties": {
        "accountType": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "sendNotifications": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        },
        "tenantId": {
          "type": "integer",
          "format": "int64"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "SystemPropertiesRepresentation": {
      "properties": {
        "allowInvolveByEmail": {
          "type": "boolean"
        }
      }
    },
    "GroupRepresentation": {
      "properties": {
        "capabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupCapabilityRepresentation"
          }
        },
        "externalId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupRepresentation"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lastSyncTimeStamp": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "parentGroupId": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string"
        },
        "tenantId": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "userCount": {
          "type": "integer",
          "format": "int64"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserRepresentation"
          }
        }
      }
    },
    "ResultListDataRepresentation": {
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbstractRepresentation"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "start": {
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TenantEvent": {
      "properties": {
        "eventTime": {
          "type": "string",
          "format": "date-time"
        },
        "eventType": {
          "type": "string"
        },
        "extraInfo": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "tenantId": {
          "type": "integer",
          "format": "int64"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        },
        "userName": {
          "type": "string"
        }
      }
    },
    "AppDefinition": {
      "properties": {
        "icon": {
          "type": "string"
        },
        "models": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppModelDefinition"
          }
        },
        "publishIdentityInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PublishIdentityInfoRepresentation"
          }
        },
        "theme": {
          "type": "string"
        }
      }
    },
    "OptionRepresentation": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "PublishIdentityInfoRepresentation": {
      "properties": {
        "group": {
          "$ref": "#/definitions/LightGroupRepresentation"
        },
        "person": {
          "$ref": "#/definitions/LightUserRepresentation"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ValidationErrorRepresentation": {
      "properties": {
        "defaultDescription": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "problem": {
          "type": "string"
        },
        "problemReference": {
          "type": "string"
        },
        "validatorSetName": {
          "type": "string"
        },
        "warning": {
          "type": "boolean"
        }
      }
    },
    "TaskFilterRepresentation": {
      "properties": {
        "asc": {
          "type": "boolean"
        },
        "assignment": {
          "type": "string"
        },
        "dueAfter": {
          "type": "string",
          "format": "date-time"
        },
        "dueBefore": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "processDefinitionId": {
          "type": "string"
        },
        "processDefinitionKey": {
          "type": "string"
        },
        "sort": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "MapÂ«long,ListÂ«stringÂ»Â»": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/List"
      }
    },
    "LightUserRepresentation": {
      "properties": {
        "email": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lastName": {
          "type": "string"
        },
        "pictureId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AppDefinitionPublishRepresentation": {
      "properties": {
        "comment": {
          "type": "string"
        },
        "force": {
          "type": "boolean"
        }
      }
    },
    "CompleteFormRepresentation": {
      "properties": {
        "outcome": {
          "type": "string"
        },
        "values": {
          "type": "object"
        }
      }
    },
    "SyncLogEntryRepresentation": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "timeStamp": {
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ArrayNode": {
      "properties": {
        "array": {
          "type": "boolean"
        },
        "bigDecimal": {
          "type": "boolean"
        },
        "bigInteger": {
          "type": "boolean"
        },
        "binary": {
          "type": "boolean"
        },
        "boolean": {
          "type": "boolean"
        },
        "containerNode": {
          "type": "boolean"
        },
        "double": {
          "type": "boolean"
        },
        "float": {
          "type": "boolean"
        },
        "floatingPointNumber": {
          "type": "boolean"
        },
        "int": {
          "type": "boolean"
        },
        "integralNumber": {
          "type": "boolean"
        },
        "long": {
          "type": "boolean"
        },
        "missingNode": {
          "type": "boolean"
        },
        "nodeType": {
          "type": "string",
          "enum": [
            "ARRAY",
            "BINARY",
            "BOOLEAN",
            "MISSING",
            "NULL",
            "NUMBER",
            "OBJECT",
            "POJO",
            "STRING"
          ]
        },
        "null": {
          "type": "boolean"
        },
        "number": {
          "type": "boolean"
        },
        "object": {
          "type": "boolean"
        },
        "pojo": {
          "type": "boolean"
        },
        "short": {
          "type": "boolean"
        },
        "textual": {
          "type": "boolean"
        },
        "valueNode": {
          "type": "boolean"
        }
      }
    },
    "FormValueRepresentation": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TaskUpdateRepresentation": {
      "properties": {
        "description": {
          "type": "string"
        },
        "descriptionSet": {
          "type": "boolean"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "dueDateSet": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "nameSet": {
          "type": "boolean"
        }
      }
    },
    "UserRepresentation": {
      "properties": {
        "apps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LightAppRepresentation"
          }
        },
        "capabilities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "company": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "fullname": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupRepresentation"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lastName": {
          "type": "string"
        },
        "lastUpdate": {
          "type": "string",
          "format": "date-time"
        },
        "latestSyncTimeStamp": {
          "type": "string",
          "format": "date-time"
        },
        "password": {
          "type": "string"
        },
        "pictureId": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string"
        },
        "tenantId": {
          "type": "integer",
          "format": "int64"
        },
        "tenantName": {
          "type": "string"
        },
        "tenantPictureId": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "FormRepresentation": {
      "properties": {
        "description": {
          "type": "string"
        },
        "formDefinition": {
          "$ref": "#/definitions/FormDefinitionRepresentation"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedBy": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedByFullName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "referenceId": {
          "type": "integer",
          "format": "int64"
        },
        "stencilSetId": {
          "type": "integer",
          "format": "int64"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ObjectNode": {},
    "ProcessScopesRequestRepresentation": {
      "properties": {
        "identifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessScopeIdentifierRepresentation"
          }
        },
        "overriddenModel": {
          "type": "string"
        }
      }
    },
    "AppModelDefinition": {
      "properties": {
        "createdBy": {
          "type": "integer",
          "format": "int64"
        },
        "createdByFullName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedBy": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedByFullName": {
          "type": "string"
        },
        "modelType": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "stencilSetId": {
          "type": "integer",
          "format": "int64"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FormFieldRepresentation": {
      "properties": {
        "className": {
          "type": "string"
        },
        "col": {
          "type": "integer",
          "format": "int32"
        },
        "colspan": {
          "type": "integer",
          "format": "int32"
        },
        "hasEmptyValue": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "layout": {
          "$ref": "#/definitions/LayoutRepresentation"
        },
        "maxLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxValue": {
          "type": "string"
        },
        "minLength": {
          "type": "integer",
          "format": "int32"
        },
        "minValue": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "optionType": {
          "type": "string"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OptionRepresentation"
          }
        },
        "overrideId": {
          "type": "boolean"
        },
        "params": {
          "type": "object"
        },
        "placeholder": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "regexPattern": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "restIdProperty": {
          "type": "string"
        },
        "restLabelProperty": {
          "type": "string"
        },
        "restResponsePath": {
          "type": "string"
        },
        "restUrl": {
          "type": "string"
        },
        "row": {
          "type": "integer",
          "format": "int32"
        },
        "sizeX": {
          "type": "integer",
          "format": "int32"
        },
        "sizeY": {
          "type": "integer",
          "format": "int32"
        },
        "tab": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "object"
        },
        "visibilityCondition": {
          "$ref": "#/definitions/ConditionRepresentation"
        }
      }
    },
    "TaskRepresentation": {
      "properties": {
        "adhocTaskCanBeReassigned": {
          "type": "boolean"
        },
        "assignee": {
          "$ref": "#/definitions/LightUserRepresentation"
        },
        "category": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "type": "integer",
          "format": "int64"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "formKey": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "initiatorCanCompleteTask": {
          "type": "boolean"
        },
        "involvedPeople": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LightUserRepresentation"
          }
        },
        "memberOfCandidateGroup": {
          "type": "boolean"
        },
        "memberOfCandidateUsers": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "parentTaskId": {
          "type": "string"
        },
        "parentTaskName": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "processDefinitionCategory": {
          "type": "string"
        },
        "processDefinitionDeploymentId": {
          "type": "string"
        },
        "processDefinitionDescription": {
          "type": "string"
        },
        "processDefinitionId": {
          "type": "string"
        },
        "processDefinitionKey": {
          "type": "string"
        },
        "processDefinitionName": {
          "type": "string"
        },
        "processDefinitionVersion": {
          "type": "integer",
          "format": "int32"
        },
        "processInstanceId": {
          "type": "string"
        },
        "processInstanceName": {
          "type": "string"
        },
        "processInstanceStartUserId": {
          "type": "string"
        }
      }
    },
    "ChangePasswordRepresentation": {
      "properties": {
        "newPassword": {
          "type": "string"
        },
        "oldPassword": {
          "type": "string"
        }
      }
    },
    "EntityAttributeScopeRepresentation": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "AppDefinitionRepresentation": {
      "properties": {
        "defaultAppId": {
          "type": "string"
        },
        "deploymentId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "modelId": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "tenantId": {
          "type": "integer",
          "format": "int64"
        },
        "theme": {
          "type": "string"
        }
      }
    },
    "LightAppRepresentation": {
      "properties": {
        "description": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "theme": {
          "type": "string"
        }
      }
    },
    "FormJavascriptEventRepresentation": {
      "properties": {
        "event": {
          "type": "string"
        },
        "javascriptLogic": {
          "type": "string"
        }
      }
    },
    "AddGroupCapabilitiesRepresentation": {
      "properties": {
        "capabilities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ProcessInstanceFilterRepresentation": {
      "properties": {
        "asc": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "processDefinitionId": {
          "type": "string"
        },
        "processDefinitionKey": {
          "type": "string"
        },
        "sort": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "MapÂ«string,stringÂ»": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "AbstractRepresentation": {},
    "ConditionRepresentation": {
      "properties": {
        "leftFormFieldId": {
          "type": "string"
        },
        "leftRestResponseId": {
          "type": "string"
        },
        "nextConditionOperator": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "rightFormFieldId": {
          "type": "string"
        },
        "rightRestResponseId": {
          "type": "string"
        },
        "rightType": {
          "type": "string"
        },
        "rightValue": {
          "type": "object"
        }
      }
    },
    "FormOutcomeRepresentation": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "UserProcessInstanceFilterRepresentation": {
      "properties": {
        "appId": {
          "type": "integer",
          "format": "int64"
        },
        "filter": {
          "$ref": "#/definitions/ProcessInstanceFilterRepresentation"
        },
        "icon": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "recent": {
          "type": "boolean"
        }
      }
    },
    "MapÂ«string,ListÂ«EntityVariableScopeRepresentationÂ»Â»": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/List"
      }
    },
    "BoxUserAccountCredentialsRepresentation": {
      "properties": {
        "authenticationURL": {
          "type": "string"
        },
        "expireDate": {
          "type": "string",
          "format": "date-time"
        },
        "ownerEmail": {
          "type": "string"
        }
      }
    },
    "SaveFormRepresentation": {
      "properties": {
        "values": {
          "type": "object"
        }
      }
    },
    "LightTenantRepresentation": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "FormTabRepresentation": {
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "visibilityCondition": {
          "$ref": "#/definitions/ConditionRepresentation"
        }
      }
    },
    "ProcessInstanceRepresentation": {
      "properties": {
        "businessKey": {
          "type": "string"
        },
        "ended": {
          "type": "string",
          "format": "date-time"
        },
        "graphicalNotationDefined": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "processDefinitionCategory": {
          "type": "string"
        },
        "processDefinitionDeploymentId": {
          "type": "string"
        },
        "processDefinitionDescription": {
          "type": "string"
        },
        "processDefinitionId": {
          "type": "string"
        },
        "processDefinitionKey": {
          "type": "string"
        },
        "processDefinitionName": {
          "type": "string"
        },
        "processDefinitionVersion": {
          "type": "integer",
          "format": "int32"
        },
        "startFormDefined": {
          "type": "boolean"
        },
        "started": {
          "type": "string",
          "format": "date-time"
        },
        "startedBy": {
          "$ref": "#/definitions/LightUserRepresentation"
        },
        "tenantId": {
          "type": "string"
        },
        "variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RestVariable"
          }
        }
      }
    }
  }
}